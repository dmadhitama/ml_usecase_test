name: ML Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        pytest tests/ -v

  train:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create output directories
      run: |
        mkdir -p models output
    
    - name: Train retail model
      run: |
        python retail_analysis.py --input "data/Online Retail.xlsx" --output output/retail
    
    - name: Train wholesale model
      run: |
        python wholesale_analysis.py --input "data/Wholesale customers data.csv" --output output/wholesale
    
    - name: Upload models and results
      uses: actions/upload-artifact@v4
      with:
        name: trained-models
        path: |
          output/wholesale/model.pth
          output/retail/model.joblib
          output/*/metrics.json

  validate:
    needs: train
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Download models
      uses: actions/download-artifact@v4
      with:
        name: trained-models
        path: models/
    
    - name: Create output directory
      run: |
        mkdir -p output/validation
    
    - name: Validate retail model
      run: |
        python retail_analysis.py --input "data/Online Retail.xlsx" --output output/validation/retail --validate-only
    
    - name: Validate wholesale model
      run: |
        python wholesale_analysis.py --input "data/Wholesale customers data.csv" --output output/validation/wholesale --validate-only --model-path "output/wholesale/model.pth"
    
    - name: Check validation results
      run: |
        echo "Checking validation metrics..."
        
        # Check retail metrics
        if [ -f "output/validation/retail/metrics.json" ]; then
          echo "Retail Model Metrics:"
          cat output/validation/retail/metrics.json
          
          silhouette_score=$(jq '.silhouette_score' output/validation/retail/metrics.json)
          if (( $(echo "$silhouette_score < 0.5" | bc -l) )); then
            echo "Error: Retail model silhouette score too low: $silhouette_score"
            exit 1
          fi
        else
          echo "Error: Retail model metrics file not found"
          exit 1
        fi
        
        # Check wholesale metrics
        if [ -f "output/validation/wholesale/metrics.json" ]; then
          echo "Wholesale Model Metrics:"
          cat output/validation/wholesale/metrics.json
          
          accuracy=$(jq '.accuracy' output/validation/wholesale/metrics.json)
          if (( $(echo "$accuracy < 0.8" | bc -l) )); then
            echo "Error: Wholesale model accuracy too low: $accuracy"
            exit 1
          fi
        else
          echo "Error: Wholesale model metrics file not found"
          exit 1
        fi

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download models
      uses: actions/download-artifact@v4
      with:
        name: trained-models
        path: models/
    
    - name: Deploy to staging
      run: |
        # Add your deployment script here
        echo "Deploying models to staging environment"